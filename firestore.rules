
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }

    match /slugs/{slugId} {
      allow read: if true;
      allow write: if false;
    }

    match /facilities/{facilityId} {
      function isOwner() {
        return isSignedIn() &&
               get(/databases/$(database)/documents/facilities/$(facilityId)).data.ownerId == request.auth.uid;
      }
      function isStaff() {
        return isSignedIn() &&
               exists(/databases/$(database)/documents/facilities/$(facilityId)/staff/$(request.auth.uid));
      }
      // Allow owners to read all facilities they own
      allow read: if isSignedIn() && resource.data.ownerId == request.auth.uid;
      // Allow staff to read their specific facility
      allow read: if isStaff();
      // Allow facility creation by authenticated users
      allow create: if isSignedIn() && request.resource.data.ownerId == request.auth.uid;
      allow update, delete: if isOwner();
      
      match /{subcollection}/{docId} {
        allow read: if isOwner() || isStaff();
        allow create, update, delete: if isOwner() || isStaff();
      }
    }
    
    // Allow users to query facilities by ownerId for dashboard
    match /facilities/{document=**} {
      allow read: if isSignedIn() && resource.data.ownerId == request.auth.uid;
    }
  }
}
